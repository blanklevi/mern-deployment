{"version":3,"sources":["views/Homepage.js","views/AddPet.js","views/PetPage.js","views/EditPet.js","views/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Homepage","props","useState","pets","setPets","useEffect","axios","get","then","res","console","log","data","className","href","scope","map","pet","key","_id","name","petType","AddPet","setName","setPetType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","onSubmit","event","preventDefault","newPet","post","navigate","catch","err","response","handleCreate","type","onChange","target","value","style","color","marginLeft","message","PetPage","setPet","id","onClick","delete","EditPet","fetchData","petFromDb","editedPet","put","handleEdit","NotFound","location","App","path","default","noThrow","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.cb360253.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { navigate } from \"@reach/router\";\r\nimport axios from \"axios\";\r\n\r\nconst Homepage = (props) => {\r\n  const [pets, setPets] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:8000/api/pets\").then((res) => {\r\n      console.log(res);\r\n      setPets(res.data.pets);\r\n    });\r\n  }, []);\r\n\r\n  if (pets === null) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Pet Shelter</h1>\r\n      <h2>These Pets are looking for a good home</h2>\r\n      <a href=\"/pets/new\">Add a pet to the shelter</a>\r\n      <div>\r\n        <div>\r\n          <table className=\"table table-dark\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Type</th>\r\n                <th scope=\"col\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pets.map((pet) => {\r\n                return (\r\n                  <tr key={pet._id}>\r\n                    <th scope=\"row\">{pet.name}</th>\r\n                    <td>{pet.petType}</td>\r\n                    <td>\r\n                      <a href={`/pets/${pet._id}`}>Details</a> &#124;{\" \"}\r\n                      <a href={`/pets/${pet._id}/edit`}>Edit</a>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { navigate } from \"@reach/router\";\r\nimport axios from \"axios\";\r\n\r\nconst AddPet = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [petType, setPetType] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [skill1, setSkill1] = useState(\"\");\r\n  const [skill2, setSkill2] = useState(\"\");\r\n  const [skill3, setSkill3] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleCreate = (event) => {\r\n    event.preventDefault();\r\n    const newPet = {\r\n      name: name,\r\n      petType: petType,\r\n      description: description,\r\n      skill1: skill1,\r\n      skill2: skill2,\r\n      skill3: skill3,\r\n    };\r\n    axios\r\n      .post(\"http://localhost:8000/api/pets/new\", newPet)\r\n      .then((res) => {\r\n        console.log(res);\r\n        navigate(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        setErrors(err.response.data.errors);\r\n        console.log(err.response.data.errors);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h1>Pet Shelter</h1>\r\n        <h2>Know a pet needing a home?</h2>\r\n        <a href=\"/\">Back to Home</a>\r\n        <div>\r\n          <form\r\n            onSubmit={(event) => {\r\n              handleCreate(event);\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label>Pet Name: </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                onChange={(event) => {\r\n                  setName(event.target.value);\r\n                }}\r\n              />\r\n              {errors.name ? (\r\n                <span style={{ color: \"red\", marginLeft: \"5px\" }}>\r\n                  {errors.name.message}\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}{\" \"}\r\n              <br />\r\n              <label>Pet Type: </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                onChange={(event) => {\r\n                  setPetType(event.target.value);\r\n                }}\r\n              />\r\n              {errors.petType ? (\r\n                <span style={{ color: \"red\", marginLeft: \"5px\" }}>\r\n                  {errors.petType.message}\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <label>Pet Description: </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                onChange={(event) => {\r\n                  setDescription(event.target.value);\r\n                }}\r\n              />\r\n              {errors.description ? (\r\n                <span style={{ color: \"red\", marginLeft: \"5px\" }}>\r\n                  {errors.description.message}\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <p>Skills (optional): </p>\r\n              <label>Skill 1: </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                onChange={(event) => {\r\n                  setSkill1(event.target.value);\r\n                }}\r\n              />\r\n              <label>Skill 2: </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                onChange={(event) => {\r\n                  setSkill2(event.target.value);\r\n                }}\r\n              />\r\n              <label>Skill 3: </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                onChange={(event) => {\r\n                  setSkill3(event.target.value);\r\n                }}\r\n              />\r\n              <button className=\"btn btn-primary\">Add Pet</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPet;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { navigate } from \"@reach/router\";\r\nimport axios from \"axios\";\r\n\r\nconst PetPage = (props) => {\r\n  const [pet, setPet] = useState(\"\");\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8000/api/pets/${props.id}`).then((res) => {\r\n      console.log(res);\r\n      setPet(res.data.pet);\r\n    });\r\n  }, [props.id]);\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(\"http://localhost:8000/api/pets/delete/\" + id)\r\n      .then((res) => {\r\n        navigate(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Pet Shelter</h1>\r\n      <h2>Details about: {pet.name}</h2>\r\n      <a href=\"/\">Back to Home</a>\r\n      <p>Pet Type: {pet.petType}</p>\r\n      <p>Description: {pet.description}</p>\r\n      <p>\r\n        Skills: {pet.skill1} {pet.skill2} {pet.skill3}\r\n      </p>\r\n\r\n      <button\r\n        onClick={(event) => {\r\n          handleDelete(pet._id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PetPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { navigate } from \"@reach/router\";\r\nimport axios from \"axios\";\r\n\r\nconst EditPet = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [petType, setPetType] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [skill1, setSkill1] = useState(\"\");\r\n  const [skill2, setSkill2] = useState(\"\");\r\n  const [skill3, setSkill3] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    axios\r\n      .get(`http://localhost:8000/api/pets/${props.id}`)\r\n      .then((res) => {\r\n        const petFromDb = res.data;\r\n        console.log(petFromDb);\r\n        setName(petFromDb.pet.name);\r\n        setPetType(petFromDb.pet.petType);\r\n        setDescription(petFromDb.pet.description);\r\n        setSkill1(petFromDb.pet.skill1);\r\n        setSkill2(petFromDb.pet.skill2);\r\n        setSkill3(petFromDb.pet.skill3);\r\n      })\r\n      .catch((err) => {\r\n        setErrors(err.response.data.errors);\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  const handleEdit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedPet = {\r\n      name: name,\r\n      petType: petType,\r\n      description: description,\r\n      skill1: skill1,\r\n      skill2: skill2,\r\n      skill3: skill3,\r\n    };\r\n\r\n    axios\r\n      .put(`http://localhost:8000/api/pets/update/${props.id}`, editedPet)\r\n      .then((res) => {\r\n        console.log(\"updated response\" + \" \" + res.data.name);\r\n        navigate(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        setErrors(err.response.data.errors);\r\n        console.log(err.response.data.errors);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h1>Pet Shelter</h1>\r\n        <h2>Edit {name}</h2>\r\n        <a href=\"/\">Back to Home</a>\r\n        <div>\r\n          <form\r\n            onSubmit={(event) => {\r\n              handleEdit(event);\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label>Pet Name: </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(event) => {\r\n                  setName(event.target.value);\r\n                }}\r\n              />\r\n              {errors.name ? (\r\n                <span style={{ color: \"red\", marginLeft: \"5px\" }}>\r\n                  {errors.name.message}\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}{\" \"}\r\n              <br />\r\n              <label>Pet Type: </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={petType}\r\n                onChange={(event) => {\r\n                  setPetType(event.target.value);\r\n                }}\r\n              />\r\n              {errors.petType ? (\r\n                <span style={{ color: \"red\", marginLeft: \"5px\" }}>\r\n                  {errors.petType.message}\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <label>Pet Description: </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={description}\r\n                onChange={(event) => {\r\n                  setDescription(event.target.value);\r\n                }}\r\n              />\r\n              {errors.description ? (\r\n                <span style={{ color: \"red\", marginLeft: \"5px\" }}>\r\n                  {errors.description.message}\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <p>Skills (optional): </p>\r\n              <label>Skill 1: </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={skill1}\r\n                onChange={(event) => {\r\n                  setSkill1(event.target.value);\r\n                }}\r\n              />\r\n              <label>Skill 2: </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={skill2}\r\n                onChange={(event) => {\r\n                  setSkill2(event.target.value);\r\n                }}\r\n              />\r\n              <label>Skill 3: </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={skill3}\r\n                onChange={(event) => {\r\n                  setSkill3(event.target.value);\r\n                }}\r\n              />\r\n              <button className=\"btn btn-primary\">Add Pet</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPet;\r\n","import React from \"react\";\r\n\r\nconst NotFound = (props) => {\r\n  console.log(props);\r\n\r\n  return <div>Page not found: {props.location.href}</div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Link, Redirect, Router } from \"@reach/router\";\n\nimport Homepage from \"./views/Homepage\";\nimport AddPet from \"./views/AddPet\";\nimport PetPage from \"./views/PetPage\";\nimport EditPet from \"./views/EditPet\";\nimport NotFound from \"./views/NotFound\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Homepage path=\"/\" />\n        <AddPet path=\"/pets/new\" />\n        <PetPage path=\"/pets/:id\" />\n        <EditPet path=\"/pets/:id/edit\" />\n        <NotFound default noThrow=\"true\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}